name: OpenTofu Apply

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "**/*.tf"
      - "**/*.tfvars"

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  tofu-plan:
    name: OpenTofu Plan, Validate, and Comment for the main environment
    uses: ./.github/workflows/tofu-init-validate-plan-comment.yml
    with:
      working-directory: "environments/main"
      var-file-path: "config/projects.tfvars"
      skip-comment: true
    secrets: inherit

  manual-approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: tofu-plan
    if: success()

    permissions:
      issues: write

    steps:
      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: haraldvinje
          minimum-approvals: 1
          issue-title: "Manual Approval Required for OpenTofu Apply"
          issue-body: "Please approve or deny the deployment."

  tofu-apply:
    name: OpenTofu Apply
    runs-on: ubuntu-latest
    needs: manual-approval
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate GitHub App token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Set Access Token as Environment Variable
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "Setting up the GitHub App token as an environment variable..."
          echo "GH_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: eu-west-1

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: OpenTofu Init, Plan and Apply
        working-directory: environments/main
        run: |
          tofu init
          tofu validate -no-color
          tofu plan \
            -var-file="../../config/projects.tfvars" \
            -no-color \
            -out=tfplan
          tofu apply -auto-approve tfplan

      - name: Get OpenTofu Outputs for Bootstrapping accounts
        working-directory: environments/main
        run: |
          mkdir -p /tmp/tofu-outputs
          bootstrap_configs=$(tofu output)
          echo "bootstrap_configs = ${bootstrap_configs}" > /tmp/tofu-outputs/bootstrap_configs.tfvars

      - name: Upload bootstrap tfvars file
        uses: actions/upload-artifact@v4
        with:
          name: bootstrap-configs-tfvars
          path: /tmp/tofu-outputs/bootstrap_configs.tfvars
          overwrite: true
          retention-days: 1

  bootstrap-accounts:
    name: Bootstrap Accounts
    runs-on: ubuntu-latest
    needs: tofu-apply

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: eu-west-1

      - name: Download Bootstrap Configs
        uses: actions/download-artifact@v4
        with:
          name: bootstrap-configs-tfvars
          path: ./environments/bootstrap/terraform.tfvars

      - name: Bootstrap Resources via OpenTofu
        working-directory: environments/bootstrap
        run: |
          # echo "Waiting for account to become available (60s)..."
          sleep 60

          tofu init
          tofu apply -auto-approve

      - name: Get OpenTofu Outputs for creating IaC repos
        working-directory: environments/bootstrap
        run: |
          mkdir -p /tmp/tofu-outputs
          iac_repo_configs=$(tofu output)
          echo "bootstrap_configs = ${iac_repo_configs}" > /tmp/tofu-outputs/iac_repo_configs.tfvars

      - name: Upload IaC repo configs
        uses: actions/upload-artifact@v4
        with:
          name: iac-repo-configs-tfvars
          path: /tmp/tofu-outputs/iac_repo_configs.tfvars
          overwrite: true
          retention-days: 1

  project-iac-repo:
    name: Project IaC Repo
    runs-on: ubuntu-latest
    needs: [tofu-apply, bootstrap-accounts]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate GitHub App token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Set Access Token as Environment Variable
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "Setting up the GitHub App token as an environment variable..."
          echo "GH_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: eu-west-1

      - name: Download Role ARN Data
        uses: actions/download-artifact@v4
        with:
          name: iac-repo-configs-tfvars
          path: ./environments/project-iac-repo/terraform.tfvars

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Create Project IaC Repos via OpenTofu
        run: |
          tofu init
          tofu apply -auto-approve
          