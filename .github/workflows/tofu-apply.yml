name: OpenTofu Apply

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  MANUAL_APPROVAL_TIMEOUT_MINUTES: 20
  MANUAL_APPROVAL_APPROVERS: haraldvinje

jobs:
  # ----- MAIN ENVIRONMENT -----
  tofu-plan-main:
    name: OpenTofu Plan for Main Environment
    uses: ./.github/workflows/tofu-init-validate-plan-comment.yml
    with:
      working-directory: "environments/main"
      var-file-path: "config/projects.tfvars"
      skip-comment: true
    secrets: inherit

  tofu-manual-approve-main:
    name: Manual Approval for Main Environment
    runs-on: ubuntu-latest
    needs: tofu-plan-main
    if: success()
    permissions:
      issues: write

    steps:
      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ env.MANUAL_APPROVAL_APPROVERS }}
          timeout-minutes: ${{ env.MANUAL_APPORVAL_TIMEOUT_MINUTES }}
          minimum-approvals: 1
          issue-title: "Manual Approval Required for Main Environment"
          issue-body: "Please approve or deny the deployment to the main environment."

  tofu-apply-main:
    name: OpenTofu Apply for Main Environment
    runs-on: ubuntu-latest
    needs: tofu-manual-approve-main
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate GitHub App token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Set Access Token as Environment Variable
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "Setting up the GitHub App token as an environment variable..."
          echo "GH_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: eu-west-1

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: OpenTofu Init, Plan and Apply
        working-directory: environments/main
        run: |
          tofu init
          tofu validate -no-color
          tofu plan \
            -var-file="../../config/projects.tfvars" \
            -no-color \
            -out=tfplan
          tofu apply -auto-approve tfplan

      - name: Get OpenTofu Outputs for Bootstrapping accounts
        working-directory: environments/main
        run: |
          mkdir -p /tmp/bootstrap-configs
          bootstrap_configs=$(tofu output)
          echo "${bootstrap_configs}" > /tmp/bootstrap-configs/terraform.tfvars

      - name: Upload bootstrap tfvars file
        uses: actions/upload-artifact@v4
        with:
          name: bootstrap-configs-tfvars
          path: /tmp/bootstrap-configs
          overwrite: true
          retention-days: 1

  # ----- BOOTSTRAP ACCOUNTS -----
  tofu-plan-bootstrap:
    name: OpenTofu Plan for Bootstrap Accounts
    needs: tofu-apply-main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: eu-west-1

      - name: Download bootstrap tfvars
        uses: actions/download-artifact@v4
        with:
          name: bootstrap-configs-tfvars
          path: ./environments/bootstrap

      - name: OpenTofu Plan
        working-directory: environments/bootstrap
        run: |
          # Wait for the main environment to be fully provisioned, specifically AWS accounts
          sleep 30

          tofu init
          tofu validate -no-color
          tofu plan -no-color

  tofu-manual-approve-bootstrap:
    name: Manual Approval for Bootstrap Accounts
    runs-on: ubuntu-latest
    needs: tofu-plan-bootstrap
    if: success()
    permissions:
      issues: write

    steps:
      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        timeout-minutes: ${{ env.MANUAL_APPROVAL_TIMEOUT_MINUTES }}
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ env.MANUAL_APPROVAL_APPROVERS }}
          minimum-approvals: 1
          issue-title: "Manual Approval Required for Bootstrap Accounts"
          issue-body: "Please approve or deny the deployment to bootstrap accounts."

  tofu-apply-bootstrap:
    name: OpenTofu Apply for Bootstrap Accounts
    runs-on: ubuntu-latest
    needs: [tofu-manual-approve-bootstrap, tofu-apply-main]
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: eu-west-1

      - name: Download Bootstrap Configs
        uses: actions/download-artifact@v5
        with:
          name: bootstrap-configs-tfvars
          path: ./environments/bootstrap

      - name: Bootstrap Resources via OpenTofu
        working-directory: environments/bootstrap
        run: |
          tofu init
          tofu apply -auto-approve

      - name: Get OpenTofu Outputs for creating IaC repos
        working-directory: environments/bootstrap
        run: |
          mkdir -p /tmp/iac-repo-configs
          iac_repo_configs=$(tofu output)
          echo "${iac_repo_configs}" > /tmp/iac-repo-configs/terraform.tfvars

      - name: Upload IaC repo configs
        uses: actions/upload-artifact@v4
        with:
          name: iac-repo-configs-tfvars
          path: /tmp/iac-repo-configs
          overwrite: true
          retention-days: 1

  # ----- PROJECT IAC REPOS -----
  tofu-plan-project-iac-repo:
    name: OpenTofu Plan for Project IaC Repos
    needs: tofu-apply-bootstrap
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Generate GitHub App token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Set Access Token as Environment Variable
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "Setting up the GitHub App token as an environment variable..."
          echo "GH_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: eu-west-1

      - name: Download IaC repo configs
        uses: actions/download-artifact@v4
        with:
          name: iac-repo-configs-tfvars
          path: ./environments/project-iac-repo

      - name: OpenTofu Plan
        working-directory: environments/project-iac-repo
        run: |
          tofu init
          tofu validate -no-color
          tofu plan -no-color

  tofu-manual-approve-project-iac-repo:
    name: Manual Approval for Project IaC Repos
    runs-on: ubuntu-latest
    needs: tofu-plan-project-iac-repo
    if: success()
    permissions:
      issues: write

    steps:
      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        timeout-minutes: ${{ env.MANUAL_APPROVAL_TIMEOUT_MINUTES }}
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ env.MANUAL_APPROVAL_APPROVERS }}
          minimum-approvals: 1
          issue-title: "Manual Approval Required for Project IaC Repos"
          issue-body: "Please approve or deny the deployment of project IaC repositories."

  tofu-apply-project-iac-repo:
    name: OpenTofu Apply for Project IaC Repos
    runs-on: ubuntu-latest
    needs: [tofu-manual-approve-project-iac-repo, tofu-apply-bootstrap]
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate GitHub App token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Set Access Token as Environment Variable
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "Setting up the GitHub App token as an environment variable..."
          echo "GH_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: eu-west-1

      - name: Download Role ARN Data
        uses: actions/download-artifact@v4
        with:
          name: iac-repo-configs-tfvars
          path: ./environments/project-iac-repo

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Create Project IaC Repos via OpenTofu
        working-directory: environments/project-iac-repo
        run: |
          tofu init
          tofu apply -auto-approve
